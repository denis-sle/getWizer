version: "3"
services:
  db:
    image: mongo
    container_name: "mongodb"
    volumes:
      - mongodbdata:/data/db
      - ./docker-entrypoint.sh:/entrypoint.sh
    environment:
      MONGO_INITDB_ROOT_USERNAME: flaskuser
      MONGO_INITDB_ROOT_PASSWORD: flaskpassword
      MONGO_INITDB_DATABASE: flaskdb
      MONGO_INITDB_COLLECTION: apidata
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    command: mongod --auth
    networks:
      - backend

  backend:
    build:
      context: ./backend
    container_name: "backend"
    environment:
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: flaskpassword
      MONGODB_HOSTNAME: mongodb
      APP_PORT: 5000
      APP_DEBUG: 0
    depends_on:
      - db
    links:
      - db
    networks:
      - backend

  frontend:
    build:
      context: ./frontend
    container_name: "frontend"
    volumes:
      - sharedwww:/app/dist

  webserver:
    image: nginx
    container_name: "webserver"
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "true"
      SERVICE_NAME: "webserver"
    depends_on:
      - frontend
      - backend
    links:
      - backend
    volumes:
      - sharedwww:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend:
  sharedwww:
    driver: local

volumes:
  mongodbdata:
    driver: local
  sharedwww:
    driver: local


